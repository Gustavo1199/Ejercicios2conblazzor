// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TAREA2.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using TAREA2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using TAREA2.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using BlazorStrap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Ejercicio3")]
    public partial class Ejercicio3 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 42 "D:\5 cuatrimestre\Programación III\unidad 2\TAREA2\TAREA2\Pages\Ejercicio3.razor"
       

    //Declaracion de la Varibles
    string cedula = "";
    string errores = "";
    bool validacion = false;
    //* Método o función para validar una cédula dominicana*
    public void ValidaCedula()
    {
        //Declaración de variables a nivel de método o función.
        errores = "";
        validacion = false;
        int verificador = 0;
        int digito = 0;
        int digitoVerificador = 0;
        int digitoImpar = 0;
        int sumaPar = 0;
        int sumaImpar = 0;
        int longitud = Convert.ToInt32(cedula.Length);
        /* Control de errores en el código */
        try
        {
            //verificamos que la longitud del parametro sea igual a 11
            if (longitud == 11)
            {
                digitoVerificador = Convert.ToInt32(cedula.Substring(10, 1));
                //recorremos en un ciclo for cada dígito de la cédula
                for (int i = 9; i >= 0; i--)
                {
                    //si el digito no es par multiplicamos por 2
                    digito = Convert.ToInt32(cedula.Substring(i, 1));
                    if ((i % 2) != 0)
                    {
                        digitoImpar = digito * 2;
                        //si el digito obtenido es mayor a 10, restamos 9
                        if (digitoImpar >= 10)
                        {
                            digitoImpar = digitoImpar - 9;
                        }
                        sumaImpar = sumaImpar + digitoImpar;
                    }
                    /*En los demás casos sumamos el dígito y lo aculamos 
                     en la variable */
                    else
                    {
                        sumaPar = sumaPar + digito;
                    }
                }
                /*Obtenemos el verificador restandole a 10 el modulo 10 
                de la suma total de los dígitos*/
                verificador = 10 - ((sumaPar + sumaImpar) % 10);
                /*si el verificador es igual a 10 y el dígito verificador
                  es igual a cero o el verificador y el dígito verificador 
                  son iguales retorna verdadero*/
                if (((verificador == 10) && (digitoVerificador == 0))
                     || (verificador == digitoVerificador))
                {
                    validacion = true;
                }
                else
                {
                    errores = "Cedula Invalida!...";
                }
            }
            else
            {
                errores = "La cedula debe contener once(11) digitos";
            }
        }
        catch
        {
            errores += "No se pudo validar la cédula";
        }


    }



    

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
